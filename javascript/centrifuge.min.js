(function(){"use strict";if(!Object.create){Object.create=function(){function F(){}return function(o){if(arguments.length!=1){throw new Error("Object.create implementation only accepts one parameter.")}F.prototype=o;return new F}}()}if(!Array.prototype.indexOf){Array.prototype.indexOf=function(searchElement){"use strict";if(this==null){throw new TypeError}var n,k,t=Object(this),len=t.length>>>0;if(len===0){return-1}n=0;if(arguments.length>1){n=Number(arguments[1]);if(n!=n){n=0}else if(n!=0&&n!=Infinity&&n!=-Infinity){n=(n>0||-1)*Math.floor(Math.abs(n))}}if(n>=len){return-1}for(k=n>=0?n:Math.max(len-Math.abs(n),0);k<len;k++){if(k in t&&t[k]===searchElement){return k}}return-1}}function extend(destination,source){destination.prototype=Object.create(source.prototype);destination.prototype.constructor=destination;return source.prototype}function EventEmitter(){}var proto=EventEmitter.prototype;function indexOfListener(listeners,listener){var i=listeners.length;while(i--){if(listeners[i].listener===listener){return i}}return-1}function alias(name){return function aliasClosure(){return this[name].apply(this,arguments)}}proto.getListeners=function getListeners(evt){var events=this._getEvents();var response;var key;if(typeof evt==="object"){response={};for(key in events){if(events.hasOwnProperty(key)&&evt.test(key)){response[key]=events[key]}}}else{response=events[evt]||(events[evt]=[])}return response};proto.flattenListeners=function flattenListeners(listeners){var flatListeners=[];var i;for(i=0;i<listeners.length;i+=1){flatListeners.push(listeners[i].listener)}return flatListeners};proto.getListenersAsObject=function getListenersAsObject(evt){var listeners=this.getListeners(evt);var response;if(listeners instanceof Array){response={};response[evt]=listeners}return response||listeners};proto.addListener=function addListener(evt,listener){var listeners=this.getListenersAsObject(evt);var listenerIsWrapped=typeof listener==="object";var key;for(key in listeners){if(listeners.hasOwnProperty(key)&&indexOfListener(listeners[key],listener)===-1){listeners[key].push(listenerIsWrapped?listener:{listener:listener,once:false})}}return this};proto.on=alias("addListener");proto.addOnceListener=function addOnceListener(evt,listener){return this.addListener(evt,{listener:listener,once:true})};proto.once=alias("addOnceListener");proto.defineEvent=function defineEvent(evt){this.getListeners(evt);return this};proto.defineEvents=function defineEvents(evts){for(var i=0;i<evts.length;i+=1){this.defineEvent(evts[i])}return this};proto.removeListener=function removeListener(evt,listener){var listeners=this.getListenersAsObject(evt);var index;var key;for(key in listeners){if(listeners.hasOwnProperty(key)){index=indexOfListener(listeners[key],listener);if(index!==-1){listeners[key].splice(index,1)}}}return this};proto.off=alias("removeListener");proto.addListeners=function addListeners(evt,listeners){return this.manipulateListeners(false,evt,listeners)};proto.removeListeners=function removeListeners(evt,listeners){return this.manipulateListeners(true,evt,listeners)};proto.manipulateListeners=function manipulateListeners(remove,evt,listeners){var i;var value;var single=remove?this.removeListener:this.addListener;var multiple=remove?this.removeListeners:this.addListeners;if(typeof evt==="object"&&!(evt instanceof RegExp)){for(i in evt){if(evt.hasOwnProperty(i)&&(value=evt[i])){if(typeof value==="function"){single.call(this,i,value)}else{multiple.call(this,i,value)}}}}else{i=listeners.length;while(i--){single.call(this,evt,listeners[i])}}return this};proto.removeEvent=function removeEvent(evt){var type=typeof evt;var events=this._getEvents();var key;if(type==="string"){delete events[evt]}else if(type==="object"){for(key in events){if(events.hasOwnProperty(key)&&evt.test(key)){delete events[key]}}}else{delete this._events}return this};proto.emitEvent=function emitEvent(evt,args){var listeners=this.getListenersAsObject(evt);var listener;var i;var key;var response;for(key in listeners){if(listeners.hasOwnProperty(key)){i=listeners[key].length;while(i--){listener=listeners[key][i];if(listener.once===true){this.removeListener(evt,listener.listener)}response=listener.listener.apply(this,args||[]);if(response===this._getOnceReturnValue()){this.removeListener(evt,listener.listener)}}}}return this};proto.trigger=alias("emitEvent");proto.emit=function emit(evt){var args=Array.prototype.slice.call(arguments,1);return this.emitEvent(evt,args)};proto.setOnceReturnValue=function setOnceReturnValue(value){this._onceReturnValue=value;return this};proto._getOnceReturnValue=function _getOnceReturnValue(){if(this.hasOwnProperty("_onceReturnValue")){return this._onceReturnValue}else{return true}};proto._getEvents=function _getEvents(){return this._events||(this._events={})};function mixin(deep,target,objects){var result=target||{};for(var i=2;i<arguments.length;++i){var object=arguments[i];if(object===undefined||object===null){continue}for(var propName in object){var prop=fieldValue(object,propName);var targ=fieldValue(result,propName);if(prop===target){continue}if(prop===undefined){continue}if(deep&&typeof prop==="object"&&prop!==null){if(prop instanceof Array){result[propName]=mixin(deep,targ instanceof Array?targ:[],prop)}else{var source=typeof targ==="object"&&!(targ instanceof Array)?targ:{};result[propName]=mixin(deep,source,prop)}}else{result[propName]=prop}}}return result}function fieldValue(object,name){try{return object[name]}catch(x){return undefined}}function endsWith(value,suffix){return value.indexOf(suffix,value.length-suffix.length)!==-1}function stripSlash(value){if(value.substring(value.length-1)=="/"){value=value.substring(0,value.length-1)}return value}function isString(value){if(value===undefined||value===null){return false}return typeof value==="string"||value instanceof String}function isFunction(value){if(value===undefined||value===null){return false}return typeof value==="function"}function log(level,args){if(window.console){var logger=window.console[level];if(isFunction(logger)){logger.apply(window.console,args)}}}function Centrifuge(options){this._sockjs=false;this._status="disconnected";this._reconnect=true;this._transport=null;this._messageId=0;this._clientId=null;this._subscriptions={};this._sep=":";this._fullRegex=/^([^_]+[A-z0-9_@\-]{2,}):([A-z0-9_@\-\.]+)$/;this._channelOnlyRegex=/^([A-z0-9_@\-\.]+)$/;this._config={retry:3e3,info:null,debug:false,protocols_whitelist:["websocket","xdr-streaming","xhr-streaming","iframe-eventsource","iframe-htmlfile","xdr-polling","xhr-polling","iframe-xhr-polling","jsonp-polling"]};if(options){this.configure(options)}}extend(Centrifuge,EventEmitter);var centrifuge_proto=Centrifuge.prototype;centrifuge_proto._debug=function(){if(this._config.debug===true){log("debug",arguments)}};centrifuge_proto._configure=function(configuration){this._debug("Configuring centrifuge object with",configuration);if(!configuration){configuration={}}this._config=mixin(false,this._config,configuration);if(!this._config.url){throw"Missing required configuration parameter 'url' specifying the Centrifuge server URL"}if(!this._config.token){throw"Missing required configuration parameter 'token' specifying the sign of authorization request"}if(!this._config.project){throw"Missing required configuration parameter 'project' specifying project ID in Centrifuge"}if(!this._config.user){throw"Missing required configuration parameter 'user' specifying user's unique ID in your application"}this._config.url=stripSlash(this._config.url);if(endsWith(this._config.url,"connection")){if(typeof window.SockJS==="undefined"){throw"You need to include SockJS client library before Centrifuge javascript client library or use pure Websocket endpoint"}this._sockjs=true}};centrifuge_proto._parsePath=function(path){var channel,namespace;var fullMatches=this._fullRegex.exec(path);if(fullMatches){namespace=fullMatches[1];channel=fullMatches[2]}else{var channelOnlyMatches=this._channelOnlyRegex.exec(path);if(!channelOnlyMatches){throw"Invalid path"}namespace=null;channel=channelOnlyMatches[1]}return[namespace,channel]};centrifuge_proto._makePath=function(namespace,channel){if(namespace===""||namespace===null||namespace==undefined){if(!this._channelOnlyRegex.test(channel)){throw"Invalid channel name "+channel}return channel}var path=namespace+this._sep+channel;if(!this._fullRegex.test(path)){throw"Invalid path "+path}return path};centrifuge_proto._setStatus=function(newStatus){if(this._status!==newStatus){this._debug("Status",this._status,"->",newStatus);this._status=newStatus}};centrifuge_proto._isDisconnected=function(){return this._isConnected()===false};centrifuge_proto._isConnected=function(){return this._status==="connected"};centrifuge_proto._nextMessageId=function(){return++this._messageId};centrifuge_proto._clearSubscriptions=function(){this._subscriptions={}};centrifuge_proto._send=function(messages){for(var i=0;i<messages.length;++i){var message=messages[i];message.uid=""+this._nextMessageId();if(this._clientId){message.clientId=this._clientId}this._debug("Send",message);this._transport.send(JSON.stringify(message))}};centrifuge_proto._connect=function(callback){this._clientId=null;this._reconnect=true;this._clearSubscriptions();this._setStatus("connecting");var self=this;if(callback){this.on("connect",callback)}if(this._sockjs===true){this._transport=new SockJS(this._config.url,null,{protocols_whitelist:this._config.protocols_whitelist})}else{this._transport=new WebSocket(this._config.url)}this._setStatus("connecting");this._transport.onopen=function(){var centrifugeMessage={method:"connect",params:{token:self._config.token,user:self._config.user,project:self._config.project}};if(self._config.info!==null){self._debug("connect using additional info");centrifugeMessage["params"]["info"]=self._config.info}else{self._debug("connect without additional info")}self._send([centrifugeMessage])};this._transport.onerror=function(error){this._debug(error)};this._transport.onclose=function(){self._setStatus("disconnected");self.trigger("disconnect");if(self._reconnect===true){window.setTimeout(function(){if(self._reconnect===true){self._connect.call(self)}},self._config.retry)}};this._transport.onmessage=function(event){var data;data=JSON.parse(event.data);self._debug("Received",data);self._receive(data)}};centrifuge_proto._disconnect=function(){this._clientId=null;this._setStatus("disconnected");this._subscriptions={};this._reconnect=false;this._transport.close()};centrifuge_proto._getSubscription=function(path){var subscription=this._subscriptions[path];if(!subscription){return null}return subscription};centrifuge_proto._findSubscription=function(namespace,channel){var subscription;var path=this._makePath(namespace,channel);subscription=this._subscriptions[path];if(!subscription){path=this._makePath(null,channel);subscription=this._subscriptions[path];if(!subscription){return null}}return subscription};centrifuge_proto._removeSubscription=function(path){try{delete this._subscriptions[path]}catch(e){this._debug("nothing to delete for path ",path)}};centrifuge_proto._connectResponse=function(message){if(message.error===null){this._clientId=message.body;this._setStatus("connected");this.trigger("connect",[message])}else{this.trigger("error",[message]);this.trigger("connect:error",[message])}};centrifuge_proto._disconnectResponse=function(message){if(message.error===null){this._clientId=null;this._setStatus("disconnected");this.trigger("disconnect",[message]);this.trigger("disconnect:success",[message])}else{this.trigger("error",[message]);this.trigger("disconnect:error",[message])}};centrifuge_proto._subscribeResponse=function(message){var namespace=message.params["namespace"];var channel=message.params["channel"];var path=this._makePath(namespace,channel);var subscription=this._subscriptions[path];if(!subscription){return}if(message.error===null){subscription.subscribed=true;subscription.trigger("subscribe:success",[message]);subscription.trigger("ready",[message])}else{subscription.trigger("subscribe:error",[message]);subscription.trigger("error",[message]);this.trigger("error",[message])}};centrifuge_proto._unsubscribeResponse=function(message){if(message.error!==null){this.trigger("error",[message])}};centrifuge_proto._publishResponse=function(message){var namespace=message.params["namespace"];var channel=message.params["channel"];var path=this._makePath(namespace,channel);var subscription=this._subscriptions[path];if(!subscription){return}if(message.error===null){subscription.trigger("publish:success",[message])}else{subscription.trigger("publish:error",[message]);this.trigger("error",[message])}};centrifuge_proto._presenceResponse=function(message){var namespace=message.body["namespace"];var channel=message.body["channel"];var subscription=this._findSubscription(namespace,channel);if(!subscription){return}if(message.error===null){subscription.trigger("presence",[message.body]);subscription.trigger("presence:success",[message])}else{subscription.trigger("presence:error",[message]);this.trigger("error",[message])}};centrifuge_proto._historyResponse=function(message){var namespace=message.body["namespace"];var channel=message.body["channel"];var subscription=this._findSubscription(namespace,channel);if(!subscription){return}if(message.error===null){subscription.trigger("history",[message.body]);subscription.trigger("history:success",[message])}else{subscription.trigger("history:error",[message]);this.trigger("error",[message])}};centrifuge_proto._joinResponse=function(body){var subscription=this._findSubscription(body.namespace,body.channel);if(!subscription){return}subscription.trigger("join",[body])};centrifuge_proto._leaveResponse=function(body){var subscription=this._findSubscription(body.namespace,body.channel);if(!subscription){return}subscription.trigger("leave",[body])};centrifuge_proto._messageResponse=function(message){if(message.body){var body=message.body;if(body.message_type==="join"){this._joinResponse(body)}else if(body.message_type==="leave"){this._leaveResponse(body)}else if(body.message_type==="message"){var subscription=this._findSubscription(body.namespace,body.channel);if(!subscription){return}subscription.trigger("message",[body])}}else{this._debug("Unknown message",message)}};centrifuge_proto._receive=function(message){if(message===undefined||message===null){return}var method=message.method;switch(method){case"connect":this._connectResponse(message);break;case"disconnect":this._disconnectResponse(message);break;case"subscribe":this._subscribeResponse(message);break;case"unsubscribe":this._unsubscribeResponse(message);break;case"publish":this._publishResponse(message);break;case"presence":this._presenceResponse(message);break;case"history":this._historyResponse(message);break;case"join":this._joinResponse(message);break;case"leave":this._leaveResponse(message);break;case"message":this._messageResponse(message);break;default:break}};centrifuge_proto.getClientId=function(){return this._clientId};centrifuge_proto.parsePath=centrifuge_proto._parsePath;centrifuge_proto.makePath=centrifuge_proto._makePath;centrifuge_proto.isConnected=centrifuge_proto._isConnected;centrifuge_proto.isDisconnected=centrifuge_proto._isDisconnected;centrifuge_proto.configure=function(configuration){this._configure.call(this,configuration)};centrifuge_proto.connect=centrifuge_proto._connect;centrifuge_proto.disconnect=centrifuge_proto._disconnect;centrifuge_proto.getSubscription=centrifuge_proto._getSubscription;centrifuge_proto.findSubscription=centrifuge_proto._findSubscription;centrifuge_proto.send=function(message){this._send([message])};centrifuge_proto.subscribe=function(path,callback){if(arguments.length<1){throw"Illegal arguments number: required 1, got "+arguments.length}if(!isString(path)){throw"Illegal argument type: channel must be a string"}if(this.isDisconnected()){throw"Illegal state: already disconnected"}var current_subscription=this._getSubscription(path);if(current_subscription!==null){return current_subscription}else{var subscription=new Subscription(this,path);this._subscriptions[path]=subscription;subscription.subscribe(callback);return subscription}};centrifuge_proto.unsubscribe=function(path){if(arguments.length<1){throw"Illegal arguments number: required 1, got "+arguments.length}if(!isString(path)){throw"Illegal argument type: channel must be a string"}if(this.isDisconnected()){return}var current_subscription=this._getSubscription(path);if(current_subscription!==null){current_subscription.unsubscribe()}};centrifuge_proto.publish=function(path,data,callback){var subscription=this.getSubscription(path);if(subscription===null){this._debug("subscription not found for path "+path);return null}subscription.publish(data,callback);return subscription};centrifuge_proto.presence=function(path,callback){var subscription=this.getSubscription(path);if(subscription===null){this._debug("subscription not found for path "+path);return null}subscription.presence(callback);return subscription};centrifuge_proto.history=function(path,callback){var subscription=this.getSubscription(path);if(subscription===null){this._debug("subscription not found for path "+path);return null}subscription.history(callback);return subscription};function Subscription(centrifuge,path){this._centrifuge=centrifuge;this._path=path;var matches=this.parsePath();this.namespace=matches[0];this.channel=matches[1];this.subscribed=false}extend(Subscription,EventEmitter);var sub_proto=Subscription.prototype;sub_proto.getPath=function(){return this._path};sub_proto.getCentrifuge=function(){return this._centrifuge};sub_proto.parsePath=function(){return this._centrifuge.parsePath(this._path)};sub_proto.subscribe=function(callback){var centrifugeMessage={method:"subscribe",params:{namespace:this.namespace,channel:this.channel}};if(this.namespace===null){delete centrifugeMessage["params"]["namespace"]}this._centrifuge.send(centrifugeMessage);if(callback){this.on("message",callback)}};sub_proto.unsubscribe=function(){this.subscribed=false;this._centrifuge._removeSubscription(this._path);var centrifugeMessage={method:"unsubscribe",params:{namespace:this.namespace,channel:this.channel}};if(this.namespace===null){delete centrifugeMessage["params"]["namespace"]}this._centrifuge.send(centrifugeMessage)};sub_proto.publish=function(data,callback){var centrifugeMessage={method:"publish",params:{namespace:this.namespace,channel:this.channel,data:data}};if(this.namespace===null){delete centrifugeMessage["params"]["namespace"]}if(callback){this.on("publish:success",callback)}this._centrifuge.send(centrifugeMessage)};sub_proto.presence=function(callback){var centrifugeMessage={method:"presence",params:{namespace:this.namespace,channel:this.channel}};if(this.namespace===null){delete centrifugeMessage["params"]["namespace"]}if(callback){this.on("presence",callback)}this._centrifuge.send(centrifugeMessage)};sub_proto.history=function(callback){var centrifugeMessage={method:"history",params:{namespace:this.namespace,channel:this.channel}};if(this.namespace===null){delete centrifugeMessage["params"]["namespace"]}if(callback){this.on("history",callback)}this._centrifuge.send(centrifugeMessage)};if(typeof define==="function"&&define.amd){define(function(){return Centrifuge})}else if(typeof module==="object"&&module.exports){module.exports=Centrifuge}else{this.Centrifuge=Centrifuge}}).call(this);